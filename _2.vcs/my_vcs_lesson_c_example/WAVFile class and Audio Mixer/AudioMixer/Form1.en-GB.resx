<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="aboutToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>114, 22</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AACADAyAAABeRQB9BgB5DwCAAACAAACAAACAAACADAx8CABFdgA7iQBiOwCAAACAAACAAAB0FwA0mgKA
        AACAAAB6DQCAAACAAACAAACAAACAAACADAyAAACAAACAAACAAACAFxeADAxWWwhZVQhyJgp1IQuADAyA
        DAyADAyAFxd0IgsxogUvpQRiRAmADAyADAyADAxoOQoX0gJ4GwuADAxhRgl/DwyADAyADAyADAyADAyA
        FxeADAyADAyADAyADAyADAxyHABNZQBDewBfQQBYUACAAACAAACAAACADAxsKAAuowAktwBiOwCAAACA
        AACAAABkOAAO5ABrKQCAAABTWQBxHQCAAACAAACAAACAAAB6GQx3EQCAAACAAAB6DACAFxdeTQk5kwU6
        kQU9jAZPaQiADAyADAyADAyAFxdoOQoluQMkvANiRAmADAyADAyADAxiRQkM6QFdTwmADAxLbwdvLQuA
        DAyADAyADAyADAxgUhNmPQp7FgyADAx0IguADAxVVQAmswAfwQAW0wA4jwB4EACAAACAAACADAxoLwAa
        ywAkuABMZwCAAACAAACAAABiPAAM5wA/ggCAAABIcABXUQCAAACAAACAAACAAABTZgxcSQBjOQCAAAB0
        GACAFxdVXQgdyQMQ4gIM6QEazgJyJguADAyADAyAFxdVXgkN5gEbzAMzngWADAyADAyADAxWWwgM6QE1
        mgaADAw8jgc9jAaADAyADAyADAx5GwxIgxIlugQ+iQZ0Iwt0IguADAxSWwAV1QAD+AAM5wAY0ABlNgCA
        AACAAACADAxAgAAN5gAJ7QAfwQCAAACAAACAAABWUwAJ7QAkuACAAAAmsgAmsgCAAACAAACAAABiOwA7
        lgwM5wAexABfQgBXUgCAFxdHeQcM6QEA/wAM6QEO5AJbUwiADAyADAyAFxc6kAUM6QEA/wAP4gGADAyA
        DAyADAxWWwgA/wAZzwKADAwkuwMexQOADAyADAyADAxZVgkvsQ8E+QEV1wI+igcwpgaAFxc+igYM6QEA
        /wAE9wAM6QFZVQeADAx8Ewt5JRY6kAUM6QEA/wAK6gB4GgqADAyADAxWWwgA/wAY0QJ6FwskuwMexQOA
        DAx0IQp2HAlDfgUb1w0A/wAH8QAltwIE9gCADAw+hAAH8AAA/wAA/wAH8ABOZACAAABnMgBwLQw2lAAH
        8AAA/wAA/wBsKACAAACAAABWUwAA/wAW0gBWVAAjuQAU1wB+BABnMgBPYQAymwAa1wwA/wAA/wAH8QAA
        /wCAFxc1mgUA/wAA/wAA/wAA/wBDgAaADAxYVwhlRA4mtwMA/wAA/wAA/wBnPAmADAyADAxWWwgA/wAF
        9AA8jAQM5wAL6gFyJgpUYAcqrwMP4gED+QAA/wAA/wAA/wAA/wCADAworgAA/wAA/wAA/wAA/wA+hAB1
        FgAzmgBLaQAZzQAA/wAA/wAA/wBYUACAAACAAABWUwAA/wAA/wAupAAA/wAA/wBYUAA3kQAhvgAC+gAA
        /wAA/wAA/wAA/wAA/wB7IRcazgIA/wAA/wAA/wAA/wAcywJObAkM6AEpswUV1wIA/wAA/wAA/wA8jAaA
        DAyADAxWWwgA/wAA/wAR3gEA/wAA/wAcywMP4wEF9QAA/wAA/wAA/wAA/wAA/wAA/wBrNgwQ4AAA/wAA
        /wAA/wAA/wAL6QAG8wAA/wAB/QAC/AAA/wAA/wAA/wAexABqKwBvIwBWVAAA/wAA/wAK6gAA/wAA/wAA
        /wAC/AAA/wAA/wAA/wAA/wAA/wAA/wAA/wAezQkM6AEA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAP5AIntQMqsQUtrAcA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAC+wAD+AAA/wAA/wAA
        /wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wAb2QoP8goK/AoJ/AkI/AgI/AgK/AoK
        /AoJ/AkI/AgI/AgK/AoK/AoJ/AkJ+wgc1ggd1QomwwoJ/AkI/AgI/AgK/AoK/AoJ/AkI/AgI/AgK/AoK
        /AoJ/AkI/AgI/AgL+wtbWhAO5AEA/wAA/wAA/wAA/wAA/wAE9wED+gEA/gAE+AEA/wAA/wAA/wAM6QJP
        aQZWWAVWWAQA/wAA/wAD+gEA/wAA/wAD+gEA/wAA/wAA/wAA/wAA/wAA/wAA/wAA/wB0KBAS3AEA/wAA
        /wAA/wAA/wAR3gAzmgEO4wEcxwAL6gEA/wAA/wAA/wA/gwKABgZ9CwVWVwQA/wAA/wAP4QEA/wAA/wAW
        0wEM6AAK7AAJ7QAA/wAA/wAA/wAA/wAA/wCAFxcgwwQA/wAA/wAA/wAA/wA0nAVzJgslugY+iQcW1QIA
        /wAA/wAA/wBQZwiADAyADAxWWwgA/wAA/wAvpgQG9AEC+wFUYQkjvwYuqQYeyAQI9wgA/wAA/wAA/wAA
        /wCADAw9hgAA/wAA/wAA/wAA/wBDegB9BgBMZwBRXgAorwAA/wAA/wAA/wBjOQCAAACAAABWUwAA/wAM
        5wBHcgAM5gAM5wBxHgBIcAA/gQBCfAAfzgwA/wAA/wAA/wAA/wCAFxc+igYA/wAA/wAA/wAB/QBJdAeA
        DAxlQAl2KBU4lQUA/wAA/wAA/wBsMgqADAyADAxWWwgA/wAY0gJSYwgN5gEQ4QJ+EAxaVQldTglLcQgm
        wg4A/wAA/wAP4QEA/wCADAxEeAAS3AAA/wAA/wAM5wBVVgCAAAB1FgB4HAw6iwAA/wAA/wAA/wB2EwCA
        AACAAABWUwAA/wAY0ABpLgAjuQAT2gCAAAB3EgB0GABbSQA1oQwA/wAG9AA1lAAA/wCAFxdJdAcY0gIA
        /wAA/wAM6AFbUwiADAyADAyAFxc+iQUA/wAA/wAO5AF+EAyADAyADAxXWwgA/wAazgJ3HAswpAQX0wKA
        DAyADAyADQxoOgpPdBIluAMrrAM7jgYznQSADAxLagAZzgAJ7AAA/wAjugBcSACAAACAAACADAxRXQAK
        6wAA/wAP4ACAAACAAACAAABiPAAA/wAltQCAAAA0mAA1lgCAAACAAACAAAB0GQBgSwxQXwBeRABPYgBv
        IwCAFxdVXQghwAMT3AIJ7gAupwRxJwqADAyADAyAFxdcUQktqwQA/wAS3QGADAyADAyADAxiRQkA/wAw
        owWADAxRZQhNbQeADAyADAyADAyADAx0LRZaVAhfSwlvKwqADAyADAxcSQA+hAAdxQAtpgBCewB+AwCA
        AACAAACADAxrKwAzmQAA/wAbyQCAAACAAACAAABoLwAO5AAxnQCAAABTWQBSXACAAACAAACAAACAAAB+
        EAxlNgBkOQB3EgCAAACAFxdhRwlTYAc3lwVcTwhbUgiADAyADAyADAyAFxd2IAtHeAcE9wAfwwOADAyA
        DAyADAyADQwstg41mgWADAxXWQhmPAiADAyADAyADAyADAyAFxdoOQp4Gwt+DwuADAyAFxdqNQpYVwhI
        dwdiRgpyKAyADAyADAyADAyAFxd2IAtHeAchwwY+iAaADAyADAyADAyADAw+lRJdUAqADAx0Iwt3HQyA
        DAyADAyADAyADAyAFxd3HQyADAyADAyADAyADAxyGwBkNwBaSwB3EwCAAACAAACAAACAAACADAx2FQBK
        awBZTQBLagCAAACAAACAAACAAABmPwx2FACAAAB+BAB/AQCAAACAAACAAACAAACADAyAAACAAACAAACA
        AACAFxeADAxtMQtuLwuADAyADAyADAyADAyADAyAFxd+DwxXWglzJAtdTwmADAyADAyADAyADAx5JheA
        DAyADAyADAyADAyADAyADAyADAyADAyAFxeADAyADAyADAyADAyADAyAAAB+BAB0GACAAACAAACAAACA
        AACAAACADAyAAAB0GACAAAB0GACAAACAAACAAACAAACADAyAAACAAACAAACAAACAAACAAACAAACAAACA
        DAyAAACAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>