### 12.2.2 ###

>>> import os
>>> os.getcwd()

---

>>> os.listdir(os.curdir)

---

>>> os.chdir(folder_name)
>>> os.getcwd()

### 12.2.3 ###

>>> import pathlib
>>> cur_path = pathlib.Path()
>>> cur_path.cwd()

### 12.2.4 ###

>>> import os
>>> print(os.path.join('bin', 'utils', 'disktools'))
bin\utils\disktools

---

>>> import os
>>> print(os.path.join('bin', 'utils', 'disktools'))
bin/utils/disktools

---

>>> import os
>>> print(os.path.join('mydir\\bin', 'utils\\disktools\\chkdisk'))
mydir\bin\utils\disktools\chkdisk

---

>>> path1 = os.path.join('mydir', 'bin'); 
>>> path2 = os.path.join('utils', 'disktools', 'chkdisk')
>>> print(os.path.join(path1, path2))
mydir\bin\utils\disktools\chkdisk

---

>>> import os
>>> os.path.basename(os.path.join('some', 'directory', 'path.jpg'))
'path.jpg'
>>> os.path.dirname(os.path.join('some', 'directory', 'path.jpg'))
'some\\directory'

---

>>> os.path.splitext(os.path.join('some', 'directory', 'path.jpg'))
('some/directory/path', '.jpg')

---

>>> import os
>>> os.path.commonprefix(['C:\\temp\\a.jpg', 'C:\\temp\\b.jpg'])
'C:\\temp\\'
>>> os.path.expanduser('~\\temp')
'C:\\Users\\administrator\\personal\\temp'
>>> os.path.expandvars('$HOME\\temp')
'C:\\Users\\administrator\\personal\\temp'

### 12.2.5 ###

>>> from pathlib import Path
>>> cur_path = Path()
>>> print(cur_path.joinpath('bin', 'utils', 'disktools'))
bin\utils\disktools

---

>>> cur_path / 'bin' / 'utils' / 'disktools'
WindowsPath('bin/utils/disktools')

---

>>> a_path = WindowsPath('bin/utils/disktools')
>>> print(a_path.parts)
('bin', 'utils', 'disktools')

---

>>> a_path = Path('.')
>>> a_path.resolve()
WindowsPath('bin/utils/disktools')

---

>>> a_path = Path('some', 'directory', 'path.jpg')
>>> a_path.name
'path.jpg'
>>> print(a_path.parent)
some\directory
>>> a_path.suffix
'.jpg'

### 12.2.6 ###

>>> import os
>>> os.path.join("C:\\Windows\\temp", os.pardir, os.curdir)
'C:\\Windows\\temp\\..\\.'   
>>> os.path.isdir(os.path.join("C:\\Windows\\temp", os.pardir, 
os.curdir))
True

---

os.listdir(os.curdir)  

---

>>> import os
>>> os.name
'nt'

---

import os
if os.name == 'posix':
    root_dir = "/"
elif os.name == 'nt':
    root_dir = "C:\\"
else:
    print("無法判定目前所處的作業系統!")

### 12.3 ###

>>> import os
>>> os.path.exists('C:\\Users\\myuser\\My Documents')
True
>>> os.path.exists('C:\\Users\\myuser\\My Documents\\Letter.doc')
True
>>> os.path.exists('C:\\Users\\myuser\\\My Documents\\ljsljkflkjs')
False
>>> os.path.isdir('C:\\Users\\myuser\\My Documents')
True
>>> os.path.isfile('C:\\Users\\ myuser\\My Documents')
False
>>> os.path.isdir('C:\\Users\\ myuser\\My Documents\\Letter.doc')
False
>>> os.path.isfile('C:\\Users\\ myuser\\My Documents\\Letter.doc')
True

### 12.3.1 ###

>>> with os.scandir(".") as my_dir:
...     for entry in my_dir:
...         print(entry.name, entry.is_file())
... 
pip-selfcheck.json True
pyvenv.cfg True
include False
test.py True
lib False
lib64 False
bin False

---

>>> with os.scandir(".") as my_dir:
...     for entry in my_dir:
...         print(entry.name, entry.is_file())

### 12.4 ###

>>> os.chdir(os.path.join('C:', 'my documents', 'tmp'))
>>> os.listdir(os.curdir)
['book1.doc.tmp', 'a.tmp', '1.tmp', '7.tmp', '9.tmp', 'registry.bkp']

---

>>> import glob
>>> glob.glob("*")
['book1.doc.tmp', 'a.tmp', '1.tmp', '7.tmp', '9.tmp', 'registry.bkp']
>>> glob.glob("*bkp")
['registry.bkp']
>>> glob.glob("?.tmp")
['a.tmp', '1.tmp', '7.tmp', '9.tmp']
>>> glob.glob("[0-9].tmp")
['1.tmp', '7.tmp', '9.tmp']

---

>>> os.rename('registry.bkp', 'registry.bkp.old')
>>> os.listdir(os.curdir)
['book1.doc.tmp', 'a.tmp', '1.tmp', '7.tmp', '9.tmp', 'registry.bkp.old']

---

>>> os.rename('7.tmp', os.path.join(os.pardir, '7.tmp'))

---

>>> os.remove('book1.doc.tmp')
>>> os.listdir(os.curdir)
['a.tmp', '1.tmp', '9.tmp', 'registry.bkp.old']

---

>>> os.makedirs('mydir')
>>> os.listdir(os.curdir)
['mydir', 'a.tmp', '1.tmp', '9.tmp', 'registry.bkp.old']
>>> os.path.isdir('mydir')
True
>>> os.makedirs(os.path.join('d1', 'd2'))  

---

>>> os.rmdir('mydir')
>>> os.listdir(os.curdir)
['a.tmp', '1.tmp', '9.tmp', 'registry.bkp.old']

### 12.4.1 ###

>>> from pathlib import Path
>>> cur_path = Path()
>>> list(cur_path.iterdir())
[WindowsPath('a.tmp'), WindowsPath('1.tmp'), WindowsPath('9.tmp'), 
WindowsPath('registry.bkp')]
>>> new_path = cur_path.joinpath('C:\\', 'my documents', 'tmp')
>>> list(new_path.iterdir())
[WindowsPath('b.tmp'), WindowsPath('c.tmp')]

---

>>> list(cur_path.glob("*"))
[WindowsPath('book1.doc.tmp'), WindowsPath('a.tmp'), 
WindowsPath('1.tmp'), WindowsPath('7.tmp'), WindowsPath('9.tmp'), 
WindowsPath('registry.bkp')]
>>> list(cur_path.glob("*bkp"))
[WindowsPath('registry.bkp')]
>>> list(cur_path.glob("?.tmp"))
[WindowsPath('a.tmp'), WindowsPath('1.tmp'), WindowsPath('7.tmp'), 
WindowsPath('9.tmp')]
>>> list(cur_path.glob("[0-9].tmp"))
[WindowsPath('1.tmp'), WindowsPath('7.tmp'), WindowsPath('9.tmp')]

---

>>> old_path = Path('registry.bkp')
>>> new_path = Path('registry.bkp.old')
>>> old_path.rename(new_path)
>>> list(cur_path.iterdir())
[WindowsPath('book1.doc.tmp'), WindowsPath('a.tmp'), 
WindowsPath('1.tmp'),
WindowsPath('7.tmp'), WindowsPath('9.tmp'),
WindowsPath('registry.bkp.old')]

---

>>> new_path = Path('book1.doc.tmp')
>>> new_path.unlink()
>>> list(cur_path.iterdir())
[WindowsPath('a.tmp'), WindowsPath('1.tmp'), WindowsPath('7.tmp'),
WindowsPath('9.tmp'), WindowsPath('registry.bkp.old')]

---

>>> new_path = Path ('mydir')
>>> new_path.mkdir(parents=True)
>>> list(cur_path.iterdir())
[WindowsPath('mydir'), WindowsPath('a.tmp'), WindowsPath('1.tmp'),
WindowsPath('7.tmp'), WindowsPath('9.tmp'),
WindowsPath('registry.bkp.old')]]
>>> new_path.is_dir('mydir')
True

---

>>> new_path = Path (os.path.join('d1', 'd2'))
>>> new_path.mkdir()
Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "C:\Users\cyb\AppData\Local\Programs\Thonny\lib\ 
           pathlib.py", line 1241, in mkdir
    self._accessor.mkdir(self, mode)
FileNotFoundError: [WinError 3] 系統找不到指定的路徑。: 'd1\\d2'
>>> new_path.mkdir(parents=True)
>>>

---

>>> new_path = Path('mydir')
>>> new_path.rmdir()
>>> list(cur_path.iterdir())
[WindowsPath('a.tmp'), WindowsPath('1.tmp'), WindowsPath('7.tmp'),
WindowsPath('9.tmp'), WindowsPath('registry.bkp.old']

### 12.5 ###

>>> for entry in os.walk("temp"):
...    print(entry)
...
('temp', ['dir1', 'dir2'], ['file1', 'file2'])
('temp\\dir1', [], ['file3', 'file4'])
('temp\\dir2', ['dir3'], ['file5'])
('temp\\dir2\\dir3', [], ['file6', 'file7'])

---

>>> for entry in os.walk("temp", topdown=False):
...    print(entry)
...
('temp\\dir1', [], ['file3', 'file4']) 
('temp\\dir2\\dir3', [], ['file6', 'file7'])
('temp\\dir2', ['dir3'], ['file5'])
('temp', ['dir1', 'dir2'], ['file1', 'file2'])

---

import os
for root, dirs, files in os.walk(os.curdir):
    print("{0} has {1} files".format(root, len(files)))
    if ".git" in dirs:
        dirs.remove(".git")    
