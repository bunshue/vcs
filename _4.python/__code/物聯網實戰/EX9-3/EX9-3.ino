#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/22d8fe76-ae49-49f3-92c8-a38797041ac9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float humi;
  float temp;
  bool sw1;
  bool sw2;
  bool sw3;
  bool sw4;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>
#define 	dht_pin    D1    
#define 	dht_type   DHT11     
DHT 	dht(dht_pin, dht_type);
unsigned int sw_pins[] = {D5, D6, D7, D8};

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  for (int i=0; i<4; i++) {
    pinMode(sw_pins[i], OUTPUT);
    digitalWrite(sw_pins[i], HIGH);
  }
  dht.begin();
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}
void loop() {
  ArduinoCloud.update();
  delay(2000);
  humi = dht.readHumidity();
  temp= dht.readTemperature();
  if (isnan(humi) || isnan(temp) ) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
}

void onSw1Change()  {
  if (sw1) {
    digitalWrite(sw_pins[0], LOW);
  } else digitalWrite(sw_pins[0], HIGH);
}
void onSw2Change()  {
  if (sw2) {
    digitalWrite(sw_pins[1], LOW);
  } else digitalWrite(sw_pins[1], HIGH);
}
void onSw3Change()  {
  if (sw3) {
    digitalWrite(sw_pins[2], LOW);
  } else digitalWrite(sw_pins[2], HIGH);
}
void onSw4Change()  {
  if (sw4) {
    digitalWrite(sw_pins[3], LOW);
  } else digitalWrite(sw_pins[3], HIGH);
}
