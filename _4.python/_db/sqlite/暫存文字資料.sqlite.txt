
sql能否做到部分填滿? 可以

SQL
資料 計畫 問題

AQI 之 sqlit應加入更新時間(update_time)一欄

print("------------------------------------------------------------")  # 60個
DB Browser for SQLite
https://sqlitebrowser.org/



'''
def fetch_data():
    url = 'http://new.cpc.com.tw/division/mb/oil-more4.aspx'

    html = requests.get(url).text
    sp = BeautifulSoup(html, 'html.parser')
    data = sp.find_all('span', {'id':'Showtd'})
    rows = data[0].find_all('tr')

    prices = list()
    for row in rows:
        cols = row.find_all('td')
        if len(cols[1].text) > 0:
            item = [cols[0].text, cols[1].text, \
                    cols[2].text, cols[3].text]
            prices.append(item)
    for p in prices:
        sqlstr = "select * from prices where gdate='{}';".format(p[0])
        cursor = conn.execute(sqlstr)
        if len(cursor.fetchall()) == 0:
            g92 = 0 if p[1]=='' else float(p[1])
            g95 = 0 if p[2]=='' else float(p[2])
            g98 = 0 if p[3]=='' else float(p[3])
            sqlstr = "insert into prices values('{}', {}, {}, {});". \
                format(p[0], g92, g95, g98)
            print(sqlstr)
            conn.execute(sqlstr)
            conn.commit()
'''





暫存資料 撈出, 準備加入程式, SQL, os, 打印, 字串, python語法

共有 8 筆資料

1	mouse	老鼠	1
2	panda	貓熊	123
3	penguin	企鵝	29
4	lion	獅子	270

5	tiger		240
第6筆資料 : 7	zebra		365
第7筆資料 : 8	koala	None	13
第8筆資料 : 9	hippo	None	996

---------------- SQL ----------------

lion	獅子 		270
mouse	老鼠		1
tiger	老虎		240
chicken	雞	5
bear	熊		345
koala	無尾熊		10
panda	貓熊		115
dog
penguin	企鵝		25
hippo	河馬
zebra	斑馬
rhino	犀牛
elephant大象
giraffe	長頸鹿
camel	駱駝
ostrich 鴕鳥
dinosaur恐龍

英文名	中文名	體重	登錄時間

list	append shuffle.....

1d
lion
mouse
cat
dog

2d
lion 10 aferica
mouse 50 asia

dictionary
lion 獅子
.....

        return "CREATE TABLE %s (%s PRIMARY KEY %s)" % (self.name, fields, keys)

    v = db.OpenView("SELECT * FROM `%s`" % table)
    v = db.OpenView("INSERT INTO _Streams (Name, Data) VALUES ('%s', ?)" % name)

# 修改 id 為 1 的資料
conn.execute("UPDATE scores SET name='{}' WHERE id={}".format('林胖虎', 1))

# 刪除資料 id 為 1 之資料
conn.execute("DELETE FROM scores WHERE id={}".format(1))

看一下建立的語法
# 建立一個資料表
sqlstr='''CREATE TABLE IF NOT EXISTS scores \
("id"  INTEGER PRIMARY KEY NOT NULL,
 "name"  TEXT NOT NULL,
 "chinese"  INTEGER NOT NULL,
 "english"  INTEGER NOT NULL,
 "math"  INTEGER NOT NULL
 )
'''
# 建立一個資料表
sqlstr='''CREATE TABLE IF NOT EXISTS scores \
("id"  INTEGER PRIMARY KEY NOT NULL,
 "name"  TEXT NOT NULL,
 "chinese"  INTEGER NOT NULL,
 "english"  INTEGER NOT NULL,
 "math"  INTEGER NOT NULL
 )
'''

cursor.execute(sqlstr)

# 新增記錄
cursor.execute('insert into scores values(1, "葉大雄", 65, 62, 40)')
cursor.execute('insert into scores values(2, "陳靜香", 85, 90, 87)')
cursor.execute('insert into scores values(3, "王聰明", 92, 90, 95)')


# 定義資料串列
datas = [[7,'葉大雄',65,62,40],
        [8,'陳靜香',85,90,87],
        [9,'王聰明',92,90,95]]

# 新增資料
for data in datas:
    conn.execute("INSERT INTO scores (id, name, chinese, english, math) VALUES \
                 ({}, '{}', {}, {}, {})".format(data[0], data[1], data[2], data[3], data[4]))




	資料寬度
第1站	4
第2站	5
第3站	6
第4站	4
第5站	5
第6站	6
第7站	4
第8站	5
第9站	6
第10站	6
第11站	4
第12站	5
第13a站	6
第13b站	6
第14站	4
第15站	5

共有16站

將每個csv檔讀出，依站別分別放至各站的二維list
若同站之不同csv檔，需合併至同一個二維list

彙整成一個大的二維list
依據第一站的資料 先建立一個大的二維list

按鈕：
00 新建資料庫，此時資料庫是空的
01 開啟資料庫，將資料庫內的資料讀出
02 匯入生產資料 若已開啟資料庫，將csv檔的資料讀出來，將資料加入當時的資料庫
03
04 匯出生產資料=匯出資料庫資料，若已開啟資料庫，資料庫內若有生產資料，將生產資料匯出成csv檔

刪除資料庫
備份資料庫
開啟資料庫所在之資料夾

搜尋資料庫資料
  匯出搜尋結果
 
修改資料庫資料
  修改後



匯入資料庫  要先開啟資料庫
但匯入時 要先檢查 是否可匯入

precheck_csv_data
precheck_data_base

若是檢查OK 才要匯入資料

----------------------------------------------------------------

        """INSERT INTO archive_orders SELECT * from orders
        WHERE order_date < '2016-01-01' """,
        """DELETE from orders WHERE order_date < '2016-01-01' """,

----------------------------------------------------------------

import sqlite3
dbfile = "applenews.db"
conn = sqlite3.connect(dbfile)

sql_str = "select count(*) from news;"
result = conn.execute(sql_str)
count = result.fetchone()[0]
print(count)

    sql_str = "select count(*) from news where url='{}';".format(content_url)
    result = conn.execute(sql_str)
    count = result.fetchone()[0]

        sql_str = "insert into news(url, title, content) values('{}','{}','{}');".format(content_url, title, data)
        conn.execute(sql_str)

----------------------------------------------------------------


import sqlite3

db = sqlite3.connect("db")

cursor = db.cursor()

cursor.execute("create table Course ( " +
               "courseId char(5), subjectId char(4) not null, " +
               "courseNumber integer, title varchar(50) not null, " +
               "numOfCredits integer, primary key (courseId))")

cursor.execute("insert into Course (courseId, subjectId, " + 
               " courseNumber, title, numOfCredits) " + 
               "values ('11113', 'CSCI', '3720', 'Database Systems', 3)")

cursor.execute("insert into Course (courseId, subjectId, " + 
               " courseNumber, title, numOfCredits) " + 
               "values ('11111', 'CSCI', '1301', 'Introduction to Programming', 3)")
db.commit()

cursor.execute("select * from Course")

rows = cursor.fetchall()

print(rows)

db.close()
----------------------------------------------------------------







----------------------------------------------------------------


----------------------------------------------------------------


----------------------------------------------------------------




----------------------------------------------------------------




----------------------------------------------------------------




----------------------------------------------------------------




----------------------------------------------------------------



----------------------------------------------------------------






----------------------------------------------------------------



----------------------------------------------------------------









----------------------------------------------------------------



----------------------------------------------------------------





----------------------------------------------------------------



----------------------------------------------------------------









----------------------------------------------------------------



----------------------------------------------------------------







----------------------------------------------------------------



----------------------------------------------------------------










----------------------------------------------------------------



----------------------------------------------------------------




