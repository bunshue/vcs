OCR 破解驗證碼

因為驗證碼通常會有很多噪點，
我上網引用了大大寫好的降噪副程式，
先將驗證碼降噪後再進行 OCR 辨識，
會大大的提高成功率。


https://stackoverflow.max-everyday.com/2019/06/python-opencv-denoising/






C:\Users\david\AppData\Local\Programs\Python\Python38-32>python.exe -m pip install PyPDF2
C:\Users\david\AppData\Local\Programs\Python\Python38-32>python.exe -m pip install PdfReader
C:\Users\david\AppData\Local\Programs\Python\Python38-32>python.exe -m pip install auto-py-to-exe


C:\Users\david\AppData\Local\Programs\Python\Python38-32>auto-py-to-exe




Python 列出目錄中所有檔案教學：os.listdir 與 os.walk



os.listdir 取得檔案列表
os.listdir 可以取得指定目錄中所有的檔案與子目錄名稱，以下是一個簡單的範例：



#!/usr/bin/python
# -*- coding: utf-8 -*-
from os import listdir
from os.path import isfile, isdir, join

# 指定要列出所有檔案的目錄
mypath = "/var/log"

# 取得所有檔案與子目錄名稱
files = listdir(mypath)

# 以迴圈處理
for f in files:
  # 產生檔案的絕對路徑
  fullpath = join(mypath, f)
  # 判斷 fullpath 是檔案還是目錄
  if isfile(fullpath):
    print("檔案：", f)
  elif isdir(fullpath):
    print("目錄：", f)
    
    
    

os.walk 遞迴搜尋檔案

os.walk 是一個以遞迴方式列出特定路徑下，所有子目錄與檔案的函數，以下是一個使用範例：

#!/usr/bin/python
# -*- coding: utf-8 -*-
from os import walk

# 指定要列出所有檔案的目錄
mypath = "/var/log"

# 遞迴列出所有子目錄與檔案
for root, dirs, files in walk(mypath):
  print("路徑：", root)
  print("  目錄：", dirs)
  print("  檔案：", files)
  
  
若要取得所有檔案的絕對路徑，讓程式逐一處理的話，可以這樣寫：

#!/usr/bin/python
# -*- coding: utf-8 -*-
from os import walk
from os.path import join

# 指定要列出所有檔案的目錄
mypath = "/var/log"

# 遞迴列出所有檔案的絕對路徑
for root, dirs, files in walk(mypath):
  for f in files:
    fullpath = join(root, f)
    print(fullpath)
    

Python 以模組名稱 __name__ 分辨程式執行模式





MapKeyboard 重設鍵盤按鍵功能、讓指定按鍵失效！（remap鍵盤、停用按鍵）
https://123.briian.com/forum.php?mod=viewthread&tid=3668
MapKeyboard v1.5 停用鍵盤按鍵、將按鍵指定其他功能 REMAP
https://123.briian.com/forum.php?mod=viewthread&tid=3668




    
      





reg add "HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" /f /ve



on-line compiler
https://www.tutorialspoint.com/execute_python_online.php
https://www.tutorialspoint.com/codingground.htm

time
https://tw.piliapp.com/time-now/tw/taipei/+

同步不同台電腦的python套件之phthon程式

需安裝之套件做成一個list

檢查本機電腦是否有安裝此套件
若無 則安裝之







http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe



chatgpt
gmail/fullname

x=[4 3 9 -7 1 2 0 0]';
y=fft(x);


clear
t=0:1/50:6.28;
x=sin(2*pi*15*t);
y=fft(x);
m=abs(y);
%p=unwrap(angle(y));
f=(0:length(y)-1)'*50/length(y);
figure(1);plot(t,x),ylabel('Sin(x)'),grid on
figure(2);plot(f,m),ylabel('Abs.'),grid on
%figure(3);plot(f,p*180/pi),ylabel('Phase'),grid on


GET
將資料全部寫在URL中，就像你寫明信片一樣，傳遞上較不安全。

GET加上參數的格式：https://www.example.com/index.html?key1=value1&key2=value2

POST
將資料寫在內部，就像你寫信然後裝進信封袋一樣，傳遞上比較安全且傳遞的資訊可以比較多。


now=datetime.now()

    no1=random.randint(1,6)   # 1~6
    no2=random.randint(1,6)   # 1~6
    no3=random.randint(1,6)   # 1~6


    person1={"name":"Amy","phone":"049-1234567","age":20}
    person2={"name":"Jack","phone":"02-4455666","age":25}
    person3={"name":"Nacy","phone":"04-9876543","age":17}
    persons=[person1,person2,person3]

import matplotlib.pyplot as plt

plt.gcf().set_size_inches(12, 14)

num=25 

for i in range(num):
    ax=plt.subplot(5,5, i+1)
    #ax.imshow(images[start_id], cmap='binary')  #顯示黑白圖片
    title = 'label = ' + str(labels[start_id])
    ax.set_title(title,fontsize=12)  # X,Y軸不顯示刻度
    ax.set_xticks([]);ax.set_yticks([])        
    start_id+=1 
plt.show()


import matplotlib.pyplot as plt

    plt.gcf().set_size_inches(12, 14)
    if num>25: num=25 
    for i in range(0, num):
        ax=plt.subplot(5,5, i+1)
        #ax.imshow(images[start_id], cmap='binary')  #顯示黑白圖片
        if( len(predictions) > 0 ) :  #有傳入預測資料
            title = 'ai = ' + str(predictions[start_id])
            # 預測正確顯示(o), 錯誤顯示(x)
            title += (' (o)' if predictions[start_id]==labels[start_id] else ' (x)') 
            title += '\nlabel = ' + str(labels[start_id])
        else :  #沒有傳入預測資料
            title = 'label = ' + str(labels[start_id])
        ax.set_title(title,fontsize=12)  #X,Y軸不顯示刻度
        ax.set_xticks([]);ax.set_yticks([])        
        start_id+=1 
    plt.show()




    plt.gcf().set_size_inches(12, 14)
    if num>25: num=25 
    for i in range(0, num):
        ax=plt.subplot(5,5, i+1)
        ax.imshow(images[start_id], cmap='binary')  #顯示黑白圖片
        if( len(predictions) > 0 ) :  #有傳入預測資料
            title = 'ai = ' + str(predictions[start_id])
            # 預測正確顯示(o), 錯誤顯示(x)
            title += (' (o)' if predictions[start_id]==labels[start_id] else ' (x)') 
            title += '\nlabel = ' + str(labels[start_id])
        else :  #沒有傳入預測資料
            title = 'label = ' + str(labels[start_id])
        ax.set_title(title,fontsize=12)  #X,Y軸不顯示刻度
        ax.set_xticks([]);ax.set_yticks([])        
        start_id+=1 
    plt.show()



import numpy as np
import matplotlib.pyplot as plt
import glob,cv2

files = glob.glob("imagedata\*.jpg")  #建立測試資料
test_feature=[]
for file in files:
    print(file)
    img=cv2.imread(file)
    img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)  #灰階    
    _, img = cv2.threshold(img, 120, 255, cv2.THRESH_BINARY_INV) #轉為反相黑白 
    test_feature.append(img)

print(test_feature)




from machine import Pin, PWM
import time

pitches = {
    'C':261, # D0
    'D':294, # Re
    'E':329, # Mi
    'F':349, # Fa
    'G':392, # So
    'A':440, # La
    'B':493, # Si
    'S':0    # Stop
}

music = (
    ('C',1),('C',1),('G',1),('G',1),('A',1),('A',1),('G',2),
    ('F',1),('F',1),('E',1),('E',1),('D',1),('D',1),('C',2),
    ('G',1),('G',1),('F',1),('F',1),('E',1),('E',1),('D',2),
    ('G',1),('G',1),('F',1),('F',1),('E',1),('E',1),('D',2),
    ('C',1),('C',1),('G',1),('G',1),('A',1),('A',1),('G',2),
    ('F',1),('F',1),('E',1),('E',1),('D',1),('D',1),('C',1)
)

speed=400 # 設定節拍速度
period=10 # 設定每拍停頓時間

buzzer = PWM(Pin(14, Pin.OUT), duty=1000) # D5
try:
    for tone,tempo in music:
        if (tone=="S"):
            buzzer.duty(0) # 靜音
        else:
            buzzer.duty(1000)
            buzzer.freq(pitches[tone])
        time.sleep_ms(tempo*speed)
        print(pitches[tone])
        #以靜音設定每拍間稍為停頓
        buzzer.duty(0)         # 靜音
        time.sleep_ms(period)  # 停頓時間
    buzzer.deinit()
except:  # CTRL + C 中斷
    buzzer.deinit()       

'''
def fetch_data():
    url = 'http://new.cpc.com.tw/division/mb/oil-more4.aspx'

    html = requests.get(url).text
    sp = BeautifulSoup(html, 'html.parser')
    data = sp.find_all('span', {'id':'Showtd'})
    rows = data[0].find_all('tr')

    prices = list()
    for row in rows:
        cols = row.find_all('td')
        if len(cols[1].text) > 0:
            item = [cols[0].text, cols[1].text, \
                    cols[2].text, cols[3].text]
            prices.append(item)
    for p in prices:
        sqlstr = "select * from prices where gdate='{}';".format(p[0])
        cursor = conn.execute(sqlstr)
        if len(cursor.fetchall()) == 0:
            g92 = 0 if p[1]=='' else float(p[1])
            g95 = 0 if p[2]=='' else float(p[2])
            g98 = 0 if p[3]=='' else float(p[3])
            sqlstr = "insert into prices values('{}', {}, {}, {});". \
                format(p[0], g92, g95, g98)
            print(sqlstr)
            conn.execute(sqlstr)
            conn.commit()
'''




TextBox預設值
# widgets 
entry_string = tk.StringVar(value = 'test1111')
entry = ttk.Entry(window, textvariable = entry_string)
entry.pack()

TextBox取值
print(entry_string.get())
